<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javscript on 欢迎来到Ali的秘密花园</title>
    <link>http://ali1213.github.io/tags/javscript/</link>
    <description>Recent content in Javscript on 欢迎来到Ali的秘密花园</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 08 Jun 2017 20:04:51 +0800</lastBuildDate>
    
	<atom:link href="http://ali1213.github.io/tags/javscript/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数组的增强 -《understanding-ECMAScipt6》读书笔记10</title>
      <link>http://ali1213.github.io/post/%E6%95%B0%E7%BB%84%E7%9A%84%E5%A2%9E%E5%BC%BA-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B010/</link>
      <pubDate>Thu, 08 Jun 2017 20:04:51 +0800</pubDate>
      
      <guid>http://ali1213.github.io/post/%E6%95%B0%E7%BB%84%E7%9A%84%E5%A2%9E%E5%BC%BA-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B010/</guid>
      <description>&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;

&lt;p&gt;前两天看了别人写的博客，对某些知识点挖掘的深度和对知识点描述语言的通俗令我赞叹。
我写的这一系列读书笔记的初衷是想写给自己备忘的。
最初的目的，是想要翻到这个文章，就能够自己看的懂描述。
毕竟有些东西，不常用，细节不一定记得那么清楚。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>class -《understanding ECMAScipt6》读书笔记9</title>
      <link>http://ali1213.github.io/post/class-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B09/</link>
      <pubDate>Wed, 07 Jun 2017 16:53:53 +0800</pubDate>
      
      <guid>http://ali1213.github.io/post/class-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B09/</guid>
      <description>&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;

&lt;p&gt;记得之前有一次面试，面试官问我，有几种面对对象的设计方式。
我一下懵了，，虽然高级程序设计的第六章我看了好多遍，但确实太久没有用了，如果没有准备面试是对面试官的不尊重，我确实有点失礼了。
有些人说，es6，没有必要记那么多种复杂的类的实现方式了。
我偏向于这种说法，prototype单词实在太长，而且类的实现方式隐晦难懂。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解构赋值-《understanding ECMAScipt6》读书笔记5</title>
      <link>http://ali1213.github.io/post/%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B05/</link>
      <pubDate>Wed, 26 Apr 2017 17:02:51 +0800</pubDate>
      
      <guid>http://ali1213.github.io/post/%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B05/</guid>
      <description>&lt;h2 id=&#34;对象解构赋值&#34;&gt;对象解构赋值&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;let node = {
    type: &amp;quot;string&amp;quot;,
    name: &amp;quot;foo&amp;quot;
};
let {type, name} = node;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>函数-《understanding ECMAScipt6》读书笔记3</title>
      <link>http://ali1213.github.io/post/%E5%87%BD%E6%95%B0-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B03/</link>
      <pubDate>Mon, 17 Apr 2017 12:35:56 +0800</pubDate>
      
      <guid>http://ali1213.github.io/post/%E5%87%BD%E6%95%B0-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B03/</guid>
      <description>&lt;p&gt;##前言
其实这本书已经看完很久了。前几天突然有人在微信群里分享了别人的翻译版本。如果有些人会觉得这本书英文比较难理解，还是可以去找翻译版的看一看。
我还是接着回顾一下知识点吧。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>字符串和正则表达式-《understanding ECMAScipt6》读书笔记2</title>
      <link>http://ali1213.github.io/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B02/</link>
      <pubDate>Wed, 15 Mar 2017 21:30:22 +0800</pubDate>
      
      <guid>http://ali1213.github.io/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B02/</guid>
      <description>&lt;p&gt;ES6增加了对字符串和正则表达式更好的支持
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>块级作用域-《understanding ECMAScipt6》读书笔记1</title>
      <link>http://ali1213.github.io/post/%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Wed, 15 Mar 2017 20:22:12 +0800</pubDate>
      
      <guid>http://ali1213.github.io/post/%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F-understanding-ecmascipt6%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B01/</guid>
      <description>&lt;h2 id=&#34;针对的问题&#34;&gt;针对的问题&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;变量提升 令人困惑&lt;/li&gt;
&lt;li&gt;改变window对象或global对象的属性&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>正则表达式字面量一个bug(续)</title>
      <link>http://ali1213.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AD%97%E9%9D%A2%E9%87%8F%E4%B8%80%E4%B8%AAbug-%E7%BB%AD/</link>
      <pubDate>Fri, 21 Oct 2016 14:29:43 +0800</pubDate>
      
      <guid>http://ali1213.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AD%97%E9%9D%A2%E9%87%8F%E4%B8%80%E4%B8%AAbug-%E7%BB%AD/</guid>
      <description>var toCamel = function (json) { var re = /(_\w)/g; var rename = &amp;quot;&amp;quot;; var arr = []; var i = 0; for (var attr in json) { arr[i] = attr; i++; }; for (i = 0; i &amp;lt; arr.length; i++) { var attr = arr[i]; if (typeof json[attr] === &amp;quot;object&amp;quot;) { json[attr] = arguments.callee(json[attr]); }; if (arr[i].match(re)) { rename = attr.replace(re, function($0) { return $0.substring(1).toUpperCase(); }); json[rename] = json[attr];</description>
    </item>
    
    <item>
      <title>正则表达式字面量一个bug</title>
      <link>http://ali1213.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AD%97%E9%9D%A2%E9%87%8F%E4%B8%80%E4%B8%AAbug/</link>
      <pubDate>Wed, 21 Sep 2016 15:07:52 +0800</pubDate>
      
      <guid>http://ali1213.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AD%97%E9%9D%A2%E9%87%8F%E4%B8%80%E4%B8%AAbug/</guid>
      <description>引言 事情起源于乙方数据库接口都是&amp;rdquo;nick_name&amp;rdquo;这种带下划线的格式: { message:&amp;quot;&amp;quot;, nick_name:&amp;quot;&amp;quot;, data:{ contact_tel:&amp;quot;&amp;quot; } } 我需要写一个小程序将驼峰格式</description>
    </item>
    
  </channel>
</rss>